@page "/Register"

@using CoyoteFrontend.Data
@using CoyoteNETCore.Shared.RequestInput;
@using System.Text.RegularExpressions;
@inject Service _service

    <div>
        <label>@string.Join(Environment.NewLine, Errors)</label>
        <br />
        <label>Username:</label>
        <input type="text" @bind="Username" />
        <br />
        <label>Email:</label>
        <input type="text" @bind="Email" />
        <br />
        <label>Password:</label>
        <input type="password" @bind="Password1"  />
        <br />
        <label>Password Repeated:</label>
        <input type="password"  @bind="Password2" />
        <br />
        <button @onclick="TryRegister">Register!</button>

    </div>

@code {
    public string Username { get; set; }
    public string Email { get; set; }
    public string Password1 { get; set; }
    public string Password2 { get; set; }
    public List<string> Errors { get; set; } = new List<string>();

    async Task TryRegister()
    {
        Errors.Clear();

        if (string.IsNullOrWhiteSpace(Username))
        {
            Errors.Add("Username cannot be empty.");
        }

        Regex regex = new Regex(@"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$");

        if (string.IsNullOrWhiteSpace(Email) || !regex.Match(Email).Success)
        {
            Errors.Add("Email is invalid.");
        }

        if (Password1 != Password2)
        {
            Errors.Add("Passwords are not equal.");
        }

        if (Errors.Count > 0)
        {
            return;
        }

        var data = await _service.TryRegister(new RegisterInput(Username, Email, Password1));
    }
}
